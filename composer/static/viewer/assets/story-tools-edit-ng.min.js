!function(){"use strict";var t=angular.module("storytools.edit.boxes.controllers",[]);t.controller("boxesEditorController",function(){var t=null;this.boxes=[{title:"Default"}],this.currentBox={},this.editingBox=null,this.editBox=function(e){t=angular.copy(e),this.editingBox=e},this.newStoryBox=function(){this.editingBox={isNew:!0},t=null},this.deleteBox=function(){alert("implement me!")},this.acceptEdit=function(){this.editingBox.isNew&&this.boxes.push(this.editingBox),t=null,this.editingBox=null},this.cancelEdit=function(){t&&angular.copy(t,this.editingBox),t=null,this.editingBox=null}}),t.controller("boxEditorController",["$scope",function(){}])}(),function(){"use strict";var t=angular.module("storytools.edit.boxes.directives",["storytools.edit.boxes.controllers"]);t.directive("boxChooser",function(){return{restrict:"E",require:"^boxesEditor",templateUrl:"boxes/box-chooser.html",link:function(){}}}),t.directive("boxesEditor",function(){return{restrict:"A",controller:"boxesEditorController",controllerAs:"boxesCtrl",link:function(){}}}),t.directive("boxEditor",function(){return{restrict:"E",controller:"boxEditorController",controllerAs:"boxCtrl",require:"^boxesEditor",templateUrl:"boxes/box-editor.html",link:function(t,e,o,r){t.$watch(function(){return r.editingBox},function(){t.editBox=r.editingBox})}}}),t.directive("boxBoundsEditor",["$timeout",function(){return{restrict:"E",templateUrl:"boxes/bounds-editor.html",link:function(t,e){var o=e[0].querySelector(".box-bounds-map"),r=new ol.Map({target:o,pixelRatio:1});r.setView(new ol.View({center:[0,0],zoom:3})),r.addLayer(new ol.layer.Tile({source:new ol.source.MapQuest({layer:"osm"})})),t.$watch("boxBoundsEditorSelected",function(t){t&&r.updateSize()})}}}]),t.directive("boxContentsEditor",function(){return{restrict:"E",templateUrl:"boxes/contents-editor.html"}}),t.directive("boxLayersEditor",function(){return{restrict:"E",templateUrl:"boxes/layers-editor.html"}}),t.directive("boxLayoutEditor",function(){return{restrict:"E",templateUrl:"boxes/layout-editor.html"}})}(),function(){"use strict";angular.module("storytools.edit.boxes",["storytools.edit.boxes.directives","storytools.edit.boxes.controllers","ui.bootstrap"])}(),function(){"use strict";var t=angular.module("storytools.edit.pins.controllers",[]);t.controller("pinsEditorController",["$scope","$timeout","StoryPin","StoryPinLayerManager","MapManager",function(t,e,o,r,n){function i(){return n.storyMap.getMap()}function l(){return n.storyMap.overlay.getFeatures()}function s(){for(var t in d)d[t].setActive(!1)}function a(){y.activeDrawTool=null,l().clear()}function c(){l().clear()}function u(){e(function(){y.activeDrawTool=null;var t=l(),e=t.getLength()>0?t.item(0).getGeometry():null;y.editingCopy.setGeometry(e),e&&null===y.editingCopy.in_map&&(y.editingCopy.in_map=!0)})}function f(t){s(),d[t]||("Modify"==t?d[t]=new ol.interaction.Modify({features:l()}):(d[t]=new ol.interaction.Draw({features:l(),type:t}),d[t].on("drawstart",c)),i().addInteraction(d[t]),d[t].on("drawend",u)),d[t].setActive(!0)}var d={},y=this;this.currentPin=null,this.editingCopy=new o,this.StoryPinLayerManager=r,this.deleteStoryPin=function(t){r.pinsChanged([t],"delete")},this.saveStoryPin=function(){var t=this.currentPin,e=this.editingCopy.getProperties();if(t instanceof o)t.setProperties(e),r.pinsChanged([t],"change");else{var n=new o(e);r.pinsChanged([n],"add")}this.currentPin=this.editingCopy=null,a()},this.editStoryPin=function(t){if(a(),this.currentPin=t,this.editingCopy=new o(this.currentPin?this.currentPin.getProperties():{}),t&&t.getGeometry()){l().push(t);var e=t.getGeometry().getExtent(),r=ol.extent.getCenter(e);i().getView().setCenter(r)}},this.deleteGeometry=function(){this.editingCopy.setGeometry(null),a()},this.isEditing=function(){return this.currentPin instanceof o},Object.defineProperty(this,"activeDrawTool",{get:function(){return this._activeDrawTool},set:function(t){this._activeDrawTool=t,angular.isString(t)?f(t):s()}}),t.$on("$destroy",function(){for(var t in d){var e=d[t];e.setActive(!1),i().removeInteraction(e)}})}]),t.controller("pinEditorController",["$scope",function(t){function e(){var e=t.pinsCtrl.editingCopy,o=!0;e&&null!=e.start_time&&null!=e.end_time&&(o=e.start_time<=e.end_time),t.pinForm.$setValidity("range",o)}t.$watch(function(){return t.pinsCtrl.editingCopy},function(e){t.storyPin=e}),t.$watch("pinsCtrl.editingCopy.start_time",e),t.$watch("pinsCtrl.editingCopy.end_time",e),this.isFormValid=function(){return t.pinForm.$valid},this.finish=function(){var e=t.storyPin;return t.storyPin=null,e}}])}(),function(){"use strict";var t=angular.module("storytools.edit.pins.directives",["storytools.core.pins"]);t.directive("pinsEditor",function(){return{restrict:"A",controller:"pinsEditorController",controllerAs:"pinsCtrl",link:function(t,e,o){var r=t.pinsCtrl;if(r.overlay=t.$eval(o.pinsOverlay),null===r.overlay)throw Error("pinsEditor needs pinsOverlay attribute")}}}),t.directive("pinChooser",function(){return{require:"^pinsEditor",restrict:"E",templateUrl:"pins/pin-chooser.html",link:function(t,e,o,r){t.editPin=function(e){r.editStoryPin(e),t.$eval(o.pinSelected,t.$parent)}}}}),t.directive("pinEditor",function(){return{require:"^pinsEditor",controller:"pinEditorController",controllerAs:"pinCtrl",restrict:"A"}}),t.directive("pinEditorForm",function(){return{require:"^pinEditor",restrict:"E",templateUrl:"pins/pin-editor-form.html",link:function(t,e){function o(){if(t.point.latitude&&t.point.longitude){new ol.geom.Point([parseFloat(t.point.longitude),parseFloat(t.point.latitude)]).transform("EPSG:4326",t.map.map.getView().getProjection())}}t.point={},t.showPointCoordinates=function(){return"Point"===t.pinsCtrl.activeDrawTool},t.$watch("storyPin",function(t,o){t!=o&&e[0].querySelector("input[name=title]").focus()}),t.$watch("point",o,!0)}}})}(),function(){"use strict";angular.module("storytools.edit.pins",["storytools.edit.time.directives","storytools.edit.pins.directives","storytools.edit.pins.controllers","ui.bootstrap"])}(),function(){"use strict";angular.module("storytools.edit.style",["storytools.edit.style.services","storytools.edit.style.directives","storytools.edit.style.controllers","storytools.edit.templates","ui.bootstrap"])}(),function(){"use strict";var t=angular.module("storytools.edit.time.directives",[]);t.directive("stDateTimeField",function(){return{restrict:"E",templateUrl:"time/date-time-field.html",scope:{dateTime:"=",currentTime:"="},link:function(t){t.open=function(e){e.preventDefault(),e.stopPropagation(),t.opened=!0}}}}),t.directive("isoDateTime",["$log",function(t){return{restrict:"A",require:"ngModel",link:function(e,o,r,n){n.$formatters.push(function(t){var e=null!=t?new Date(t).toISOString():"";return e}),n.$parsers.push(function(t){var e=Date.parse(t),o=!isNaN(e);return n.$setValidity("dateTime",o),o?e:null}),e.setFromCurrentTime=function(){e.currentTime?n.$modelValue=e.currentTime:t.error("no current time provided!")}}}}])}(),function(){"use strict";angular.module("storytools.edit.time",["storytools.edit.time.directives","storytools.edit.templates"])}(),function(){"use strict";var t=angular.module("storytools.edit.style.controllers",[]);t.controller("styleEditorController",["$scope","stStyleTypes","stStyleChoices","stLayerClassificationService","stStyleRuleBuilder",function(t,e,o,r,n){function i(){var e=t.activeStyle;r.classify(t.layer,e.classify.attribute,e.classify.method,e.classify.maxClasses).then(function(t){e.rules=t,n.buildRuleStyles(e)})}function l(o){t.layer=o,t.styleTypes=e.getTypes(o),t.styleTypes.length>0&&s(t.styleTypes[0])}function s(e){t.currentEditor=e,t.activeStyle=a(e)}function a(o){var r;if(o.name in c)r=c[o.name];else{var n=t.styleTypes.filter(function(t){return t.name==o.name});if(0===n.length)throw"invalid style type: "+o.name;r=e.createStyle(n[0])}return r}var c={};t.styleChoices=o,l(t.layer),t.setActiveStyle=s,t.$watch(function(){var e=t.styleTypes.filter(function(t){return t.active});return e[0]},function(t,e){t&&t!==e&&s(t)}),t.$watch("layer",function(t,e){t!=e&&l(t)}),t.changeClassifyProperty=function(e,o){e&&(t.activeStyle.classify[e]=o),i()},t.$watch("activeStyle",function(){if(t.editorForm.$valid){var e=t.layer.get("style");e&&e.readOnly===!0?(delete e.readOnly,t.activeStyle=e):t.layer.set("style",t.activeStyle),(t.onChange||angular.noop)(t.layer)}},!0),t.$watch("editorForm.$valid",function(){(t.formChanged||angular.noop)(t.editorForm)})}])}(),function(){"use strict";function t(t,o,r,n){e.directive(t,["stStyleChoices",function(t){return{restrict:"E",scope:{stModel:"=",property:"@",popover:"@popoverText"},templateUrl:"style/widgets/"+o,link:function(e,o,i){e.layer=e.$parent.layer,e.$watch(function(){return e.$parent.layer},function(t){e.layer=t}),e.model=e.stModel[r||e.property],e.styleChoices=t,n&&n(e,o,i)}}}])}var e=angular.module("storytools.edit.style.directives",[]);e.directive("styleEditor",function(){return{restrict:"E",templateUrl:"style/style-editor.html",controller:"styleEditorController",require:"?styleEditorController",scope:{layer:"=",onChange:"=",formChanged:"="}}}),e.directive("attributeCombo",["$log",function(t){return{restrict:"E",templateUrl:"style/widgets/attribute-combo.html",scope:{layer:"=",model:"=stModel",onChange:"=?",css:"@css"},link:function(e,o,r){function n(){var o=[];e.layer?(e.layer.get("attributes").forEach(function(e){var n=!0;"nogeom"===r.filter?n="http://www.opengis.net/gml"!==e.typeNS:"number"===r.filter?n="integer"===e.type||"double"===e.type||"long"===e.type:"unique"===r.filter?n="integer"===e.type||"string"===e.type||"long"===e.type:r.filter&&t.warn("unknown filter",r.filter),r.include&&(n=r.include.indexOf(e.type)>=0),n&&o.push(e.name)}),o.sort(),e.attributes=o):e.attributes=[]}e.$watch("layer",function(t,e){t!=e&&n()}),n(),e.property=r.property||"attribute",e.onChange||(e.onChange=function(t,o){e.model[t]=o})}}}]),t("symbolEditor","symbol-editor.html","symbol",function(t,e,o){["showGraphic","showRotation","hideColor"].forEach(function(e){t[e]=o[e]}),t.getSymbolizerText=function(t){return t.shape||t.graphic},t.getSymbolizerImage=function(){return""}}),t("strokeEditor","stroke-editor.html","stroke"),t("numberEditor","number-editor.html",null,function(t,e,o){function r(o){var r=e.find("input"),n=Number(r.attr("min"))||0,i=Number(r.attr("max")),l=Number(r.attr("step"))||1,s=t.stModel[t.property],a=o.detail||o.wheelDelta;s=Math.min(i,s+(a>0?-l:l)),s=Math.max(n,s),t.$apply(function(){t.stModel[t.property]=s})}var n={max:30,min:0,step:1};Object.keys(n).forEach(function(e){t[e]=o[e]||n[e]}),e[0].addEventListener("DOMMouseScroll",r,!1),e[0].addEventListener("mousewheel",r,!1)}),t("colorEditor","color-editor.html"),t("labelEditor","label-editor.html","label",function(t){t.styleModel={bold:"bold"==t.model.fontWeight,italic:"italic"==t.model.fontStyle},t.styleModelChange=function(){t.model.fontWeight=t.styleModel.bold?"bold":"normal",t.model.fontStyle=t.styleModel.italic?"italic":"normal"}}),e.directive("graphicEditor",["stStyleChoices","ol3MarkRenderer","iconCommons","iconCommonsSearch","stSvgIcon",function(t,e,o,r,n){return{restrict:"E",templateUrl:"style/widgets/graphic-editor.html",scope:{symbol:"="},link:function(i,l){function s(t){var o=angular.element(e(t,24));return o.addClass("symbol-icon"),o.attr("mark",t),o}function a(t){var e=angular.element("<img>");return e.attr("src",t.dataURI),e.addClass("symbol-icon"),e.attr("graphic",t.uri),e}function c(){var t=angular.element(l[0].querySelector("[data-current-symbol]"));t.find("*").remove(),i.symbol.shape?t.append(s(i.symbol.shape)):i.symbol.graphic&&n.getImage(i.symbol.graphic,"#000","#fff").then(function(e){t.append(a(e))})}function u(){d=angular.element(l[0].getElementsByClassName("recent-icons")),d.html(""),o.defaults().then(function(t){t.forEach(function(t){var e=a(t);e.on("click",f),d.append(e)}),i.recent=t})}var f=function(){var t=angular.element(this);t.attr("shape")?(i.symbol.shape=t.attr("shape"),i.symbol.graphic=null):t.attr("graphic")&&(i.symbol.shape=null,i.symbol.graphic=t.attr("graphic")),c()},d=angular.element(l[0].getElementsByClassName("ol-marks"));t.symbolizers.forEach(function(t){var e=s(t);e.attr("shape",t),e.on("click",f),d.append(e)}),i._updateRecent=function(){u(),c()},i._updateRecent(),i.showIconCommons=function(){r.search().then(function(t){n.getImageData(t.href).then(function(){i.symbol.shape=null,i.symbol.graphic=t.href,i._updateRecent()})})}}}}]),e.directive("classifyEditor",function(){return{restrict:"E",templateUrl:"style/widgets/classify-editor.html",scope:!0,link:function(t,e,o){["showMethod","showMaxClasses","showRange","showColorRamp","showColorPalette","attributeFilter"].forEach(function(e){t[e]=o[e]})}}}),e.directive("colorRamp",function(){return{restrict:"A",scope:{ramp:"=ramp"},link:function(t,e,o){function r(){var r=e[0].getContext("2d"),n=r.createLinearGradient(0,0,o.width,0);Object.getOwnPropertyNames(t.ramp).forEach(function(e){e=parseFloat(e),isNaN(e)||n.addColorStop(e,t.ramp[e])}),r.fillStyle=n,r.fillRect(0,0,o.width,o.height)}t.$watch("ramp",r),r()}}}),e.directive("colorField",function(){function t(t){return e.exec(t)}var e=/(^#[0-9a-f]{6}$)|(^#[0-9a-f]{3}$)/i;return{restrict:"A",require:"ngModel",link:function(e,o,r,n){n.$parsers.push(function(e){return n.$setValidity("color",t(e)),e}),n.$formatters.push(function(e){return n.$setValidity("color",t(e)),e})}}}),e.directive("noClose",function(){return{link:function(t,e){e.on("click",function(t){t.stopPropagation()})}}}),e.directive("styleTypeEditor",["$compile","$templateCache",function(t,e){return{restrict:"E",link:function(o,r){o.$watch("currentEditor",function(){var n=o.currentEditor;if(o.currentEditor){var i="style/types/"+n.name.replace(" ","-")+".html";r.html(e.get(i)),t(r.contents())(o)}else r.html("")})}}}]),e.directive("rulesEditor",function(){return{restrict:"E",templateUrl:"style/rules-editor.html",link:function(t){t.deleteRule=function(e){t.activeStyle.rules=t.activeStyle.rules.filter(function(t){return t!==e})}}}})}(),function(){"use strict";var t=angular.module("storytools.edit.style.iconCommons",[]);t.factory("iconCommons",["$q","stSvgIcon","stRecentChoices",function(t,e,o){return{defaults:function(){return t.all(o.icons.recent.map(function(t){return e.getImage(t)}))}}}]),t.factory("iconCommonsSearch",["$http","$modal","$injector",function(t,e,o){function r(t){for(var e=t.icons||t,o=0,r=e.length;r>o;o++)e[o].href=n+e[o].href;return t}var n=o.has("iconCommonsHost")?o.get("iconCommonsHost"):"http://localhost:8000";return{tagEndpoint:n+"/icons/icon",search:function(){return this.modal=e.open({size:"lg",controller:"iconCommonsController",templateUrl:"style/widgets/icon-commons-search.html"}),this.modal?this.modal.result:null},getCollections:function(){return t.get(n+"/icons/collections").success(function(t){return r(t)})},getMore:function(e){var o=e.href;return 0!==o.indexOf(n)&&(o=n+o),t.get(o,{params:{page:e._nextPage}}).success(function(t){return r(t)})},getCollectionIcons:function(e){var o={};return e._nextPage&&(o.page=e._nextPage),t.get(n+e.href,{params:o}).success(function(t){return r(t)})},getByTag:function(e){return t.get(this.tagEndpoint,{params:{tag:e}}).success(function(t){return r(t)})},getTags:function(e){return t.get(n+"/icons/search/tags",{params:{query:e}}).then(function(t){return t.data.tags})}}}]),t.controller("iconCommonsController",["$scope","iconCommonsSearch","stRecentChoices",function(t,e,o){function r(e,o){var r=o.data.icons;e._icons=e._icons?e._icons.concat(r):r,e._more=o.data.page<o.data.pages,e._nextPage=o.data.page+1,t.icons=e}var n={href:e.tagEndpoint},i={};t.loadMore=function(){e.getMore(t.icons).then(function(e){r(t.icons,e)})},t.close=function(){o.icons.add(t.selectedIcon.href),e.modal.close(t.selectedIcon)},t.dismiss=function(){e.modal.dismiss()},t.tagSelect=function(t){n._icons=[],e.getByTag(t).then(function(t){r(n,t)})},t.viewCollections=function(){t.icons=i},t.viewTags=function(){t.icons=n},t.collectionSelect=function(t){t._icons=[],e.getCollectionIcons(t).then(function(e){r(t,e)})},t.iconSelected=function(e,o){t.selectedIcon=e,o&&t.close()},t.selectedClass=function(e){return e===t.selectedIcon?"active":null},t.getTags=e.getTags,e.getCollections().then(function(e){t.collections=e.data.collections})}])}(),function(){"use strict";var t=angular.module("storytools.edit.style.layerClassificationService",[]);t.factory("stLayerClassificationService",["$q","$http","$modal","$sce","$log",function(t,e,o,r,n){return{classify:function(i,l,s,a){this.cache||(this.cache={});var c;if(null===l||null===s)return c=t.defer(),c.reject("Not enough info to perform WPS request."),c.promise;var u=i.get("id")+"|"+l+"|"+s+"|"+a;if(this.cache[u])return c=t.defer(),c.resolve(this.cache[u]),c.promise;var f,d=this,y=new storytools.edit.WPSClassify.WPSClassify,p=i.get("path")+"wps";if("unique"===s)return f=y.getUniqueValues({featureNS:i.get("featureNS"),typeName:i.get("typeName"),featurePrefix:i.get("featurePrefix"),attribute:l},!0),e({url:p,method:"POST",data:f,headers:{"Content-Type":"application/xml"}}).then(function(t){var e=[];if(t.data&&t.data.features)for(var o=0,r=Math.min(t.data.features.length,a);r>o;++o){var n=t.data.features[o];e.push({name:n.properties.value,value:n.properties.value})}return d.cache[u]=e,e});var m;return"Natural Breaks"===s?m="NATURAL_BREAKS":"Equal Interval"===s?m="EQUAL_INTERVAL":"Quantile"===s&&(m="QUANTILE"),void 0!==m?(f=y.classifyVector({featureNS:i.get("featureNS"),typeName:i.get("typeName"),featurePrefix:i.get("featurePrefix"),attribute:l,numClasses:a,method:m},!0),e({url:p,method:"POST",data:f,headers:{"Content-Type":"application/xml"}}).then(function(t){var e=y.parseResult(t.data);return e.success===!0?(d.cache[u]=e.rules,e.rules):(o.open({templateUrl:"/lib/templates/core/error-dialog.html",controller:["$scope",function(t){t.title="Error",t.msg=r.trustAsHtml("An error occurred when communicating with the classification service: <br/>"+e.msg)}]}),n.warn(e.msg),[])})):void 0}}}])}(),function(){"use strict";var t=angular.module("storytools.edit.style.services",["storytools.core.style","storytools.edit.style.styleRuleBuilder","storytools.edit.style.styleChoices","storytools.edit.style.styleTypes","storytools.edit.style.layerClassificationService","storytools.edit.style.iconCommons"]);t.factory("WPSClassify",[storytools.edit.WPSClassify]),t.factory("SLDStyleConverter",[storytools.edit.SLDStyleConverter]),t.factory("WFSDescribeFeatureType",[storytools.edit.WFSDescribeFeatureType]),t.factory("StyleComplete",[storytools.edit.StyleComplete])}(),function(){"use strict";function t(t,e){this._max=e,this._key="stRecentChoices-"+t;var o=localStorage.getItem(this._key);this.recent=o?JSON.parse(o):[]}var e=angular.module("storytools.edit.style.styleChoices",[]);e.factory("stStyleChoices",function(){return{symbolizers:["circle","square","triangle","star","cross","x"],rotationUnits:["degrees","radians"],strokeStyle:["solid","dashed","dotted"],fontFamily:["serif","sans-serif","cursive","monospace"],colorRamps:[{0:"#ff0000",1:"#0000ff"},{0:"#00ff00",1:"#ffff00"}],colorPalettes:[{name:"colors 1",vals:["#ff9900","#b36b00","#ffe6bf","#ffcc80","#00b366","#007d48","#bfffe4","#80ffc9","#400099","#2d006b","#dabfff","#b580ff"]},{name:"colors 2",vals:["#ff99aa","#b36baa","#aae6bf","#aacc80","#00b366","#007d48","#bfaae4","#80aac9","#40aa99","#2daa6b","#dabfaa","#b580aa"]}],classMethods:["Natural Breaks","Equal Interval","Quantile","Geometric Interval","Standard Deviation"],getPalette:function(t){var e=this.colorPalettes.filter(function(e){return e.name===t});return e.length?e[0]:null}}}),e.factory("stRecentChoices",function(){return{icons:new t("icons",24)}}),t.prototype.clear=function(){this.recent=[],localStorage.setItem(this._key,JSON.stringify(this.recent))},t.prototype.add=function(t){-1===this.recent.indexOf(t)&&(this.recent.push(t),this.recent.length>this._max&&this.recent.shift(),localStorage.setItem(this._key,JSON.stringify(this.recent)))}}(),function(){"use strict";var t=angular.module("storytools.edit.style.styleRuleBuilder",["storytools.edit.style.styleTypes","storytools.edit.style.styleChoices"]);t.factory("stStyleRuleBuilder",["stStyleTypes","stStyleChoices",function(t,e){function o(t){return("00"+t.toString(16)).slice(-2)}function r(t,e){function r(){return[i[0],i[1]]}if(1===e)return[t[0]];var n=[],i=Object.keys(t).filter(function(t){return"$"!=t.toString().charAt(0)});i.sort();for(var l=i.map(function(e){var o=t[e];return[parseInt("0x"+o.substr(1,2)),parseInt("0x"+o.substr(3,2)),parseInt("0x"+o.substr(5,2))]}),s=1/(e-1),a=0;e>a;a++){var c=a*s,u=r(c),f=(c-u[0])/(u[1]-u[0]),d=l[u[0]],y=l[u[1]],p=Math.floor(d[0]+(y[0]-d[0])*f),m=Math.floor(d[1]+(y[1]-d[1])*f),h=Math.floor(d[2]+(y[2]-d[2])*f);n.push("#"+o(p)+o(m)+o(h))}return n}function n(t,e){var o=e.styleType.rule,r={};angular.forEach(o,function(t,o){var n={};angular.forEach(t,function(t,o){var r=null;switch(t){case"color":e.colors&&(r=e.colors[e.index%e.colors.length]);break;case"range":e.rangeStep&&(r=Math.round(e.rangeStep*e.index));break;default:throw"invalid copySource "+t}null!==r&&(n[o]=r)}),r[o]=n}),t.style=r}return{_colorRampValues:r,buildRuleStyles:function(o){var i,l;if(o.classify){if(o.classify.colorRamp)i=r(o.classify.colorRamp,o.rules.length);else if(o.classify.colorPalette){var s=e.getPalette(o.classify.colorPalette);i=s.vals}o.classify.range&&(l=(o.classify.range.max-o.classify.range.min)/o.rules.length)}var a={colors:i,rangeStep:l,style:o,styleType:t.getStyleType(o.typeName)};o.rules.forEach(function(t,e){a.index=e,n(t,a)})}}}])}(),function(){"use strict";var t=angular.module("storytools.edit.style.styleTypes",[]),e={size:10,shape:"circle",graphic:null,graphicType:null,fillColor:"#f59620",fillOpacity:70,rotationAttribute:null,rotationUnits:"degrees"},o={strokeColor:"#f59620",strokeWidth:1,strokeStyle:"solid",strokeOpacity:100},r={attribute:null,fillColor:"#f59620",fontFamily:"Serif",fontSize:10,fontStyle:"normal",fontWeight:"normal",placement:"point"},n={method:"unique",attribute:null,maxClasses:5,colorRamp:null},i={method:null,attribute:null,maxClasses:5,colorRamp:null},l={method:null,attribute:null,maxClasses:5,range:{min:0,max:16}},s=[{name:"simple point",displayName:"Simple",prototype:{geomType:"point"}},{name:"unique point",displayName:"Unique",prototype:{geomType:"point",classify:n},rule:{symbol:{fillColor:"color"}}},{name:"class point",displayName:"Choropleth",prototype:{geomType:"point",classify:i},rule:{symbol:{fillColor:"color"}}},{name:"graduated point",displayName:"Graduated",prototype:{geomType:"point",classify:l},rule:{symbol:{size:"range"}}},{name:"heatmap",displayName:"HeatMap",prototype:{geomType:"point",radius:8,opacity:.8}},{name:"simple line",displayName:"Simple",prototype:{geomType:"line"}},{name:"unique line",displayName:"Unique",prototype:{geomType:"line",classify:n},rule:{stroke:{strokeColor:"color"}}},{name:"simple polygon",displayName:"Simple",prototype:{geomType:"polygon"}},{name:"unique polygon",displayName:"Unique",prototype:{geomType:"polygon",classify:n},rule:{symbol:{fillColor:"color"}}},{name:"class polygon",displayName:"Choropleth",prototype:{geomType:"polygon",classify:i},rule:{symbol:{fillColor:"color"}}}];t.run(["$injector",function(t){if(t.has("stStyleDefaults")){var r=t.get("stStyleDefaults");[e,o].forEach(function(t){Object.keys(t).forEach(function(e){e in r&&(t[e]=r[e])})})}}]),t.factory("stStyleTypes",function(){return{getTypes:function(t){return angular.copy(s).filter(function(e){return e.prototype.geomType===t.get("geomType")})},getStyleType:function(t){var e=s.filter(function(e){return e.name==t});if(e.length>1)throw"duplicate type names!";return 0===e.length?null:e[0]},createStyle:function(t){var n={symbol:e,stroke:o,label:r,typeName:t.name},i=angular.extend({},angular.copy(n),t.prototype);return"classify"in i&&(i.rules=[]),i}}})}();